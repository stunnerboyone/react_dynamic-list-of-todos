{"version":3,"sources":["types/enum/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","query","filter","todos","setActiveTodo","activeTodo","useState","hoveredItemId","setHoveredItemId","filteredTodo","todo","All","Active","completed","Completed","title","toLowerCase","includes","className","map","onMouseEnter","id","onMouseLeave","classNames","onClick","type","TodoFilter","setFilter","setQuery","value","onChange","e","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","setUser","loading","setLoading","useEffect","userId","finally","href","email","name","App","setTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6cc8429b.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { Filter } from '../../types/enum/Filter';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[]\n  setActiveTodo: (currentTodo: Todo | null) => void\n  activeTodo: Todo | null\n  query: string,\n  filter: Filter\n}\n\nexport const TodoList: React.FC<Props> = ({\n  query,\n  filter,\n  todos,\n  setActiveTodo,\n  activeTodo,\n}) => {\n  const [hoveredItemId, setHoveredItemId] = useState<null | number>(null);\n\n  const filteredTodo = todos\n    .filter((todo) => {\n      switch (filter) {\n        case Filter.All:\n          return todo;\n        case Filter.Active:\n          return !todo.completed;\n\n        case Filter.Completed:\n          return todo.completed;\n        default:\n          return todo;\n      }\n    })\n    .filter((todo) => todo.title.toLowerCase().includes(query.toLowerCase()));\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          filteredTodo\n            .map(todo => (\n              <tr\n                data-cy=\"todo\"\n                onMouseEnter={() => setHoveredItemId(todo.id)}\n                onMouseLeave={() => setHoveredItemId(null)}\n                className={classNames({\n                  'has-background-info-light':\n                    (activeTodo?.id === todo.id) || (hoveredItemId === todo.id),\n                })}\n                key={todo.id}\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {\n                    todo.completed && (\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    )\n                  }\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={classNames({\n                      'has-text-success': todo.completed,\n                      'has-text-danger': !todo.completed,\n                    })}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    onClick={() => setActiveTodo(todo)}\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className={classNames('far', {\n                          'fa-eye': !(activeTodo?.id === todo.id),\n                          'fa-eye-slash': activeTodo?.id === todo.id,\n                        })}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Filter } from '../../types/enum/Filter';\n\ninterface Props {\n  setFilter: (c: Filter) => void,\n  filter: Filter,\n  query: string\n  setQuery: (c: string) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter,\n  filter,\n  query,\n  setQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(e) => setFilter(e.target.value as Filter)}\n          >\n            <option value={Filter.All}>All</option>\n            <option value={Filter.Active}>Active</option>\n            <option value={Filter.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {\n          query && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setQuery('')}\n              />\n            </span>\n          )\n        }\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  activeTodo: Todo\n  setActiveTodo: (currentTodo: Todo | null) => void\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  activeTodo,\n  setActiveTodo,\n}) => {\n  const [user, setUser] = useState<null | User>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (activeTodo.id) {\n      setLoading(true);\n\n      getUser(activeTodo.userId)\n        .then(setUser)\n        .finally(() => setLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {loading || !user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${activeTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setActiveTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {activeTodo.title}\n            </p>\n            <p className=\"block\" data-cy=\"modal-user\">\n              {activeTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${user.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useState,\n  useEffect,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Filter } from './types/enum/Filter';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState<Filter>(Filter.All);\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const [activeTodo, setActiveTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                setFilter={setFilter}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  query={query}\n                  filter={filter}\n                  todos={todos}\n                  setActiveTodo={setActiveTodo}\n                  activeTodo={activeTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {activeTodo && (\n        <TodoModal\n          activeTodo={activeTodo}\n          setActiveTodo={setActiveTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}